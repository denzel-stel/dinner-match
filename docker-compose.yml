services:
  
  postgresdb:
    restart: unless-stopped
    env_file: .env
    image: postgres
    environment:
      - POSTGRES_USER=$POSTGRESDB_USER
      - POSTGRES_PASSWORD=$POSTGRESDB_ROOT_PASSWORD
      - POSTGRES_DB=$POSTGRESDB_DATABASE
    ports:
      - $POSTGRESDB_LOCAL_PORT:$POSTGRESDB_DOCKER_PORT
    volumes:
      - db:/var/lib/postgresql/data
    # networks:
    #   - shared_network
  node-application:
    build:
      context: ./  # Set project root as build context
      dockerfile: ./docker/api/Dockerfile  # Path to Dockerfile
    container_name: node-application
    depends_on:
      - postgresdb
    restart: always
    env_file: .env
    volumes:
      - ./:/dinner_match/
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    environment:
      - DB_HOST=postgresdb
      - DB_USER=${POSTGRESDB_USER}
      - DB_PASSWORD=${POSTGRESDB_ROOT_PASSWORD}
      - DB_NAME=${POSTGRESDB_DATABASE}
      - DB_PORT=${POSTGRESDB_DOCKER_PORT}
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    env_file: .env
    environment:
      PGADMIN_DEFAULT_EMAIL: denzelstellingwerf@outlook.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  db:
    driver: local
  node-volume:
    driver: local
  pgadmin-data: